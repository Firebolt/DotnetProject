// <auto-generated />
using System;
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240126151455_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinalProject.Models.Flight", b =>
                {
                    b.Property<int>("FID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FID"));

                    b.Property<string>("AirportLoc")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("ArrDateandTimeOffset")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DeparDateandTimeOffset")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("FlightDuration")
                        .HasColumnType("interval");

                    b.Property<int>("NumofSeat")
                        .HasColumnType("integer");

                    b.Property<string>("TakeOffLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("TicketCost")
                        .HasColumnType("numeric");

                    b.HasKey("FID");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FinalProject.Models.Query", b =>
                {
                    b.Property<int>("QID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QID"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UID")
                        .HasColumnType("integer");

                    b.Property<int>("UserUID")
                        .HasColumnType("integer");

                    b.HasKey("QID");

                    b.HasIndex("UserUID");

                    b.ToTable("Queries");
                });

            modelBuilder.Entity("FinalProject.Models.Seat", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Booked")
                        .HasColumnType("boolean");

                    b.Property<int>("FID")
                        .HasColumnType("integer");

                    b.Property<int>("FlightFID")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("FlightFID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("FinalProject.Models.Ticket", b =>
                {
                    b.Property<int>("UID")
                        .HasColumnType("integer");

                    b.Property<int>("FID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BookedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UID", "FID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("FinalProject.Models.User", b =>
                {
                    b.Property<int>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserRole")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalProject.Models.Query", b =>
                {
                    b.HasOne("FinalProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinalProject.Models.Seat", b =>
                {
                    b.HasOne("FinalProject.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightFID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });
#pragma warning restore 612, 618
        }
    }
}
